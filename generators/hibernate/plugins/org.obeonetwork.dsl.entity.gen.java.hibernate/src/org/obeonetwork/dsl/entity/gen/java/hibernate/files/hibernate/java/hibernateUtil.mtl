[comment encoding = UTF-8 /]
[comment **
 * Copyright (c) 2011 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 * /]
[module hibernateUtil('http://www.eclipse.org/emf/2002/Ecore', 'http://www.obeonetwork.org/dsl/entity/2.0.0')/]

[import org::obeonetwork::dsl::entity::gen::java::common::javaVersion/]
[import org::obeonetwork::dsl::environment::gen::java::common::services::stringservices/]
[import org::obeonetwork::dsl::environment::gen::java::common::common/]


[comment ** Generates the full filepath for the given root.
 * @param root the input root.
 * /]
 [template public fullFilePath(root : Root)]
[root.pathToMainJava()/]/[getProperty('hibernateUtil.package').toPath()/]/HibernateUtil.java
[/template]

[template public hibernateUtil(root : Root)]
[file (root.fullFilePath(), false, 'UTF-8')]
package [getProperty('hibernateUtil.package')/];

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HibernateUtil {

    private static final SessionFactory sessionFactory;

    static {
        try {
            // Create SessionFactory
            sessionFactory = new Configuration().configure().buildSessionFactory();
        } catch (HibernateException ex) {
            throw new RuntimeException("Configuration problem : " + ex.getMessage(), ex);
        }
    }

    public static final ThreadLocal[root.toJavaVersion('Session')/] sessionTL = new ThreadLocal[root.toJavaVersion('Session')/]();

    public static Session currentSession() throws HibernateException {
        Session s = [root.addJavaVersion14(root.castSession())/]sessionTL.get();
        // Open a new session if this thread hasn't already one
        if (s == null) {
            s = sessionFactory.openSession();
			sessionTL.set(s);
        }
        return s;
    }

    public static void closeSession() throws HibernateException {
        Session s = [root.addJavaVersion14(root.castSession())/]sessionTL.get();
        if (s != null){
            s.close();
        }
        sessionTL.set(null);
    }
}
[/file]
[/template]

[comment ** Generates a Session cast for the given root.
 * @param root the input root.
 * /]
[template public castSession(root : Root)]
(Session)
[/template]


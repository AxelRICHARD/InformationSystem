[comment encoding = UTF-8 /]
[comment **
 * Copyright (c) 2011 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 * /]
[module actions('http://www.obeonetwork.org/dsl/cinematic/3.0.0', 'http://www.obeonetwork.org/dsl/soa/2.0.0') extends org::obeonetwork::dsl::cinematic::gen::java::struts::architecture::files::struts::java::actions/]

[import org::obeonetwork::dsl::soa::gen::java::spring::common::names /]
[import org::obeonetwork::dsl::cinematic::gen::java::struts::architecture::services::cinematicServices /]

[comment ** Overrive action imports to prepare service injection with spring.
 * @override org::obeonetwork::dsl::cinematic::gen::java::struts::architecture::files::struts::java::actions::iocImport /]
[template public iocImport(viewState : ViewState) overrides iocImport ? (getProperty('linkage.strategy').equalsIgnoreCase('spring'))]
[for (service : Service | viewState.getActionStates().actions.operations.eContainer(Service)->asOrderedSet())]
import [service.serviceInterfaceQualifiedName()/];
[/for]
[/template]

[comment ** Overrive action generation to inject related services with spring.
 * @override org::obeonetwork::dsl::cinematic::gen::java::struts::architecture::files::struts::java::actions::iocInject /]
[template public iocInject(viewState : ViewState) overrides iocInject ? (getProperty('linkage.strategy').equalsIgnoreCase('spring'))]
[for (service : Service | viewState.getActionStates().actions.operations.eContainer(Service)->asOrderedSet())]
private [service.serviceInterfaceName()/] [service.name.toLowerFirst()/]Service;
public void set[service.name/]Service([service.serviceInterfaceName()/] [service.name.toLowerFirst()/]Service){
	this.[service.name.toLowerFirst()/]Service = [service.name.toLowerFirst()/]Service;
}
[/for]
[/template]
[comment encoding = UTF-8 /]
[comment **
 * Copyright (c) 2012 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 * /]
[module warBuild('http://www.obeonetwork.org/dsl/cinematic/3.0.0')/]

[import org::obeonetwork::dsl::environment::gen::java::common::common /]
[import org::obeonetwork::dsl::environment::gen::java::common::services::stringservices /]
[import org::obeonetwork::dsl::cinematic::gen::java::struts::architecture::common::names /]

[comment ** Main generator for war build file.
 * @param root the Root of the cinematic.
 * /]
[template public warBuild(root : CinematicRoot)]
[file (root.fullFilePath(), false, 'UTF-8')]
<?xml version="1.0" ?>

<!-- ===================================================================
<description>
Build Instructions:
   To compile
        ant compile
   To war
        ant war
</description>
==================================================================== -->

<!-- Build file -->

<!-- If you change the location of the server, change the server_home below -->
<project default="war">

<!-- [protected ('properties -->')]

<property name="server.home" value="Set here JBoss server path"/>

<!-- Project name -->
<property name="project"  value="Set here Cinematic project path"/>
<!-- Build classes directory-->
<property name="bin" value="build/classes"/>
<!-- Sources directory-->
<property name="src" value="src"/>
<!-- Dist directory-->	
<property name="dist"  location="dist"/>
<!-- WebContent directory-->
<property name="webContent" value="WebContent"/>
<property name="webContent.webinf" value="${webContent}/WEB-INF"/>
<!-- Libraries directory-->
<property name="lib" value="${webContent.webinf}/lib"/>

<!-- Ear project properties -->	
<property name="ear.project"  value="Set here EAR project path"/>
<property name="ear.project.lib"  value="${ear.project}/lib" />
<!-- [/protected]  -->	

<target name="init">
    <mkdir dir="build" />
    <mkdir dir="${dist}" />
	<path id="classpath">
           <pathelement location="build"/>
           <!-- [protected ('libraries -->')]
           <fileset dir="${lib}">
	       <include name="**/*.jar"/>
           </fileset>
           <!-- [/protected] -->
       </path>
</target>

<target name="compile" depends="init">
  <javac srcdir="${src}" destdir="${bin}" debug="${debug}" fork="${javac.fork}">
  <classpath>
        <path refid="classpath"/>
    </classpath>
  </javac>
  <copy todir="${bin}">
	<fileset dir="${dist}">
		<include name="*.properties"/>
	</fileset>
  </copy>
</target>

<target name="war" depends="compile">
	<!-- Target: Build the project WAR (Web Archive) and copy on Containers -->
	  <war destfile="${dist}/${project}.war" 
      		webxml="${webContent.webinf}/web.xml">
	    <fileset dir="${webContent}">
	      <exclude name="WEB-INF/web.xml"/>
	    </fileset>
	    <lib dir="${lib}"/>
	    <!-- Define files for the WEB-INF directory -->
	    <classes dir="${bin}"/>  	
	  </war>
	  <!-- [protected ('copy -->')]
	  <!--copy file="${dist}/${project}.war" overwrite="yes" todir="${server.home}" />
	  <copy file="${dist}/${project}.war" todir="${ear.project.lib}" overwrite="yes"/-->
	  <!-- [/protected] -->
</target>	
	
</project>
[/file]
	
[/template]

[comment ** Generates the file path for war build file.
 * @param screen the input screen.
 * /]
[template public fullFilePath(root : CinematicRoot) post (trim())]	
/warBuild.xml
[/template]

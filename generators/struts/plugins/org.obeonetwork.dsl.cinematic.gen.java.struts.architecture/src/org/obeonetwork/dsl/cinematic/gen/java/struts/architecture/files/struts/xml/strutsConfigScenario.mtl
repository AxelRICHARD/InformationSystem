[comment encoding = UTF-8 /]
[comment **
 * Copyright (c) 2012 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 * /]
[module strutsConfigScenario('http://www.obeonetwork.org/dsl/cinematic/3.0.0')/]

[import org::obeonetwork::dsl::environment::gen::java::common::common /]
[import org::obeonetwork::dsl::environment::gen::java::common::logger /]
[import org::obeonetwork::dsl::environment::gen::java::common::services::stringservices /]
[import org::obeonetwork::dsl::cinematic::gen::java::struts::architecture::common::names /]
[import org::obeonetwork::dsl::cinematic::gen::java::struts::architecture::services::cinematicServices /]

[comment ** Main generator for the struts config file for a given scenario
 * @param scenario the input scenario.
 * /]
[template public strutsConfigScenario(flow : Flow)]
[file (flow.fullFilePath(), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts-config PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN" "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">

<struts-config>

    <!-- ========== Form Bean Definitions ================================== -->
    <form-beans type="org.apache.struts.action.ActionFormBean">
 [for (viewState : ViewState | flow.states->filter(ViewState))]
		<form-bean name="[viewState.getFormClassName()/]" type="[viewState.formPackage()/].[viewState.getFormClassName()/]" />
 [/for]
	</form-beans>

	<!-- ========== Action Mapping Definitions =============================== -->
    <action-mappings >
[for (viewState : ViewState | flow.states->filter(ViewState))]
		<action	path="/[viewState.actionPath()/]" 
	[if (getProperty('linkage.strategy') = 'spring')]
				type="org.springframework.web.struts.DelegatingActionProxy" 
	[else]
				type="[viewState.actionPackage()/].[viewState.getActionClassName()/]" 				
	[/if]
				parameter="event" 
				name="[viewState.getFormClassName()/]" 
				scope="request" 
				validate="false" 
				input="[viewState.definitionName()/]">
			<forward name="self" path="[viewState.definitionName()/]" />
		[for (nextViewState : ViewState | viewState.getNextViewStates())]			
			<forward name="[nextViewState.name.toStandardNotation().toLowerFirst()/]" path="/pages/[nextViewState.eContainer(Flow).name.toStandardNotation().toLower()/]/[nextViewState.name.toStandardNotation().toLower()/]?event=init" /> 
		[/for]
		</action>
[/for]
	</action-mappings>

</struts-config>[/file]
	
[/template]

[comment ** Generates the file path for the struts config file for a given flow.
 * @param flow the flow to generated struts config file.
 * /]
[template public fullFilePath(flow : Flow) post (trim())]
[flow.pathToMainWebapp()/]/WEB-INF/conf/struts-config/struts-config-[flow.name.toStandardNotation()/].xml
[/template]
